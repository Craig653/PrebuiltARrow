# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.13

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/pi/Code/arrow/cpp

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/pi/Code/arrow/cpp

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components

.PHONY : list_install_components/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target test
test:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running tests..."
	/usr/bin/ctest --force-new-ctest-process $(ARGS)
.PHONY : test

# Special rule for the target test
test/fast: test

.PHONY : test/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# The main all target
all: cmake_check_build_system
	cd /home/pi/Code/arrow/cpp && $(CMAKE_COMMAND) -E cmake_progress_start /home/pi/Code/arrow/cpp/CMakeFiles /home/pi/Code/arrow/cpp/src/parquet/CMakeFiles/progress.marks
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f CMakeFiles/Makefile2 src/parquet/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/pi/Code/arrow/cpp/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f CMakeFiles/Makefile2 src/parquet/clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f CMakeFiles/Makefile2 src/parquet/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f CMakeFiles/Makefile2 src/parquet/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/pi/Code/arrow/cpp && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
src/parquet/CMakeFiles/parquet_static.dir/rule:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f CMakeFiles/Makefile2 src/parquet/CMakeFiles/parquet_static.dir/rule
.PHONY : src/parquet/CMakeFiles/parquet_static.dir/rule

# Convenience name for target.
parquet_static: src/parquet/CMakeFiles/parquet_static.dir/rule

.PHONY : parquet_static

# fast build rule for target.
parquet_static/fast:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_static.dir/build.make src/parquet/CMakeFiles/parquet_static.dir/build
.PHONY : parquet_static/fast

# Convenience name for target.
src/parquet/CMakeFiles/parquet.dir/rule:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f CMakeFiles/Makefile2 src/parquet/CMakeFiles/parquet.dir/rule
.PHONY : src/parquet/CMakeFiles/parquet.dir/rule

# Convenience name for target.
parquet: src/parquet/CMakeFiles/parquet.dir/rule

.PHONY : parquet

# fast build rule for target.
parquet/fast:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet.dir/build.make src/parquet/CMakeFiles/parquet.dir/build
.PHONY : parquet/fast

# Convenience name for target.
src/parquet/CMakeFiles/parquet-all.dir/rule:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f CMakeFiles/Makefile2 src/parquet/CMakeFiles/parquet-all.dir/rule
.PHONY : src/parquet/CMakeFiles/parquet-all.dir/rule

# Convenience name for target.
parquet-all: src/parquet/CMakeFiles/parquet-all.dir/rule

.PHONY : parquet-all

# fast build rule for target.
parquet-all/fast:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet-all.dir/build.make src/parquet/CMakeFiles/parquet-all.dir/build
.PHONY : parquet-all/fast

# Convenience name for target.
src/parquet/CMakeFiles/parquet_shared.dir/rule:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f CMakeFiles/Makefile2 src/parquet/CMakeFiles/parquet_shared.dir/rule
.PHONY : src/parquet/CMakeFiles/parquet_shared.dir/rule

# Convenience name for target.
parquet_shared: src/parquet/CMakeFiles/parquet_shared.dir/rule

.PHONY : parquet_shared

# fast build rule for target.
parquet_shared/fast:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_shared.dir/build.make src/parquet/CMakeFiles/parquet_shared.dir/build
.PHONY : parquet_shared/fast

# Convenience name for target.
src/parquet/CMakeFiles/parquet-benchmarks.dir/rule:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f CMakeFiles/Makefile2 src/parquet/CMakeFiles/parquet-benchmarks.dir/rule
.PHONY : src/parquet/CMakeFiles/parquet-benchmarks.dir/rule

# Convenience name for target.
parquet-benchmarks: src/parquet/CMakeFiles/parquet-benchmarks.dir/rule

.PHONY : parquet-benchmarks

# fast build rule for target.
parquet-benchmarks/fast:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet-benchmarks.dir/build.make src/parquet/CMakeFiles/parquet-benchmarks.dir/build
.PHONY : parquet-benchmarks/fast

# Convenience name for target.
src/parquet/CMakeFiles/parquet-tests.dir/rule:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f CMakeFiles/Makefile2 src/parquet/CMakeFiles/parquet-tests.dir/rule
.PHONY : src/parquet/CMakeFiles/parquet-tests.dir/rule

# Convenience name for target.
parquet-tests: src/parquet/CMakeFiles/parquet-tests.dir/rule

.PHONY : parquet-tests

# fast build rule for target.
parquet-tests/fast:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet-tests.dir/build.make src/parquet/CMakeFiles/parquet-tests.dir/build
.PHONY : parquet-tests/fast

# Convenience name for target.
src/parquet/CMakeFiles/parquet_objlib.dir/rule:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f CMakeFiles/Makefile2 src/parquet/CMakeFiles/parquet_objlib.dir/rule
.PHONY : src/parquet/CMakeFiles/parquet_objlib.dir/rule

# Convenience name for target.
parquet_objlib: src/parquet/CMakeFiles/parquet_objlib.dir/rule

.PHONY : parquet_objlib

# fast build rule for target.
parquet_objlib/fast:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/build
.PHONY : parquet_objlib/fast

__/generated/parquet_constants.o: __/generated/parquet_constants.cpp.o

.PHONY : __/generated/parquet_constants.o

# target to build an object file
__/generated/parquet_constants.cpp.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/__/generated/parquet_constants.cpp.o
.PHONY : __/generated/parquet_constants.cpp.o

__/generated/parquet_constants.i: __/generated/parquet_constants.cpp.i

.PHONY : __/generated/parquet_constants.i

# target to preprocess a source file
__/generated/parquet_constants.cpp.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/__/generated/parquet_constants.cpp.i
.PHONY : __/generated/parquet_constants.cpp.i

__/generated/parquet_constants.s: __/generated/parquet_constants.cpp.s

.PHONY : __/generated/parquet_constants.s

# target to generate assembly for a file
__/generated/parquet_constants.cpp.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/__/generated/parquet_constants.cpp.s
.PHONY : __/generated/parquet_constants.cpp.s

__/generated/parquet_types.o: __/generated/parquet_types.cpp.o

.PHONY : __/generated/parquet_types.o

# target to build an object file
__/generated/parquet_types.cpp.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/__/generated/parquet_types.cpp.o
.PHONY : __/generated/parquet_types.cpp.o

__/generated/parquet_types.i: __/generated/parquet_types.cpp.i

.PHONY : __/generated/parquet_types.i

# target to preprocess a source file
__/generated/parquet_types.cpp.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/__/generated/parquet_types.cpp.i
.PHONY : __/generated/parquet_types.cpp.i

__/generated/parquet_types.s: __/generated/parquet_types.cpp.s

.PHONY : __/generated/parquet_types.s

# target to generate assembly for a file
__/generated/parquet_types.cpp.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/__/generated/parquet_types.cpp.s
.PHONY : __/generated/parquet_types.cpp.s

arrow/path_internal.o: arrow/path_internal.cc.o

.PHONY : arrow/path_internal.o

# target to build an object file
arrow/path_internal.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/path_internal.cc.o
.PHONY : arrow/path_internal.cc.o

arrow/path_internal.i: arrow/path_internal.cc.i

.PHONY : arrow/path_internal.i

# target to preprocess a source file
arrow/path_internal.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/path_internal.cc.i
.PHONY : arrow/path_internal.cc.i

arrow/path_internal.s: arrow/path_internal.cc.s

.PHONY : arrow/path_internal.s

# target to generate assembly for a file
arrow/path_internal.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/path_internal.cc.s
.PHONY : arrow/path_internal.cc.s

arrow/reader.o: arrow/reader.cc.o

.PHONY : arrow/reader.o

# target to build an object file
arrow/reader.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/reader.cc.o
.PHONY : arrow/reader.cc.o

arrow/reader.i: arrow/reader.cc.i

.PHONY : arrow/reader.i

# target to preprocess a source file
arrow/reader.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/reader.cc.i
.PHONY : arrow/reader.cc.i

arrow/reader.s: arrow/reader.cc.s

.PHONY : arrow/reader.s

# target to generate assembly for a file
arrow/reader.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/reader.cc.s
.PHONY : arrow/reader.cc.s

arrow/reader_internal.o: arrow/reader_internal.cc.o

.PHONY : arrow/reader_internal.o

# target to build an object file
arrow/reader_internal.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/reader_internal.cc.o
.PHONY : arrow/reader_internal.cc.o

arrow/reader_internal.i: arrow/reader_internal.cc.i

.PHONY : arrow/reader_internal.i

# target to preprocess a source file
arrow/reader_internal.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/reader_internal.cc.i
.PHONY : arrow/reader_internal.cc.i

arrow/reader_internal.s: arrow/reader_internal.cc.s

.PHONY : arrow/reader_internal.s

# target to generate assembly for a file
arrow/reader_internal.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/reader_internal.cc.s
.PHONY : arrow/reader_internal.cc.s

arrow/schema.o: arrow/schema.cc.o

.PHONY : arrow/schema.o

# target to build an object file
arrow/schema.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/schema.cc.o
.PHONY : arrow/schema.cc.o

arrow/schema.i: arrow/schema.cc.i

.PHONY : arrow/schema.i

# target to preprocess a source file
arrow/schema.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/schema.cc.i
.PHONY : arrow/schema.cc.i

arrow/schema.s: arrow/schema.cc.s

.PHONY : arrow/schema.s

# target to generate assembly for a file
arrow/schema.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/schema.cc.s
.PHONY : arrow/schema.cc.s

arrow/schema_internal.o: arrow/schema_internal.cc.o

.PHONY : arrow/schema_internal.o

# target to build an object file
arrow/schema_internal.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/schema_internal.cc.o
.PHONY : arrow/schema_internal.cc.o

arrow/schema_internal.i: arrow/schema_internal.cc.i

.PHONY : arrow/schema_internal.i

# target to preprocess a source file
arrow/schema_internal.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/schema_internal.cc.i
.PHONY : arrow/schema_internal.cc.i

arrow/schema_internal.s: arrow/schema_internal.cc.s

.PHONY : arrow/schema_internal.s

# target to generate assembly for a file
arrow/schema_internal.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/schema_internal.cc.s
.PHONY : arrow/schema_internal.cc.s

arrow/writer.o: arrow/writer.cc.o

.PHONY : arrow/writer.o

# target to build an object file
arrow/writer.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/writer.cc.o
.PHONY : arrow/writer.cc.o

arrow/writer.i: arrow/writer.cc.i

.PHONY : arrow/writer.i

# target to preprocess a source file
arrow/writer.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/writer.cc.i
.PHONY : arrow/writer.cc.i

arrow/writer.s: arrow/writer.cc.s

.PHONY : arrow/writer.s

# target to generate assembly for a file
arrow/writer.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/arrow/writer.cc.s
.PHONY : arrow/writer.cc.s

bloom_filter.o: bloom_filter.cc.o

.PHONY : bloom_filter.o

# target to build an object file
bloom_filter.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/bloom_filter.cc.o
.PHONY : bloom_filter.cc.o

bloom_filter.i: bloom_filter.cc.i

.PHONY : bloom_filter.i

# target to preprocess a source file
bloom_filter.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/bloom_filter.cc.i
.PHONY : bloom_filter.cc.i

bloom_filter.s: bloom_filter.cc.s

.PHONY : bloom_filter.s

# target to generate assembly for a file
bloom_filter.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/bloom_filter.cc.s
.PHONY : bloom_filter.cc.s

column_reader.o: column_reader.cc.o

.PHONY : column_reader.o

# target to build an object file
column_reader.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/column_reader.cc.o
.PHONY : column_reader.cc.o

column_reader.i: column_reader.cc.i

.PHONY : column_reader.i

# target to preprocess a source file
column_reader.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/column_reader.cc.i
.PHONY : column_reader.cc.i

column_reader.s: column_reader.cc.s

.PHONY : column_reader.s

# target to generate assembly for a file
column_reader.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/column_reader.cc.s
.PHONY : column_reader.cc.s

column_scanner.o: column_scanner.cc.o

.PHONY : column_scanner.o

# target to build an object file
column_scanner.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/column_scanner.cc.o
.PHONY : column_scanner.cc.o

column_scanner.i: column_scanner.cc.i

.PHONY : column_scanner.i

# target to preprocess a source file
column_scanner.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/column_scanner.cc.i
.PHONY : column_scanner.cc.i

column_scanner.s: column_scanner.cc.s

.PHONY : column_scanner.s

# target to generate assembly for a file
column_scanner.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/column_scanner.cc.s
.PHONY : column_scanner.cc.s

column_writer.o: column_writer.cc.o

.PHONY : column_writer.o

# target to build an object file
column_writer.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/column_writer.cc.o
.PHONY : column_writer.cc.o

column_writer.i: column_writer.cc.i

.PHONY : column_writer.i

# target to preprocess a source file
column_writer.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/column_writer.cc.i
.PHONY : column_writer.cc.i

column_writer.s: column_writer.cc.s

.PHONY : column_writer.s

# target to generate assembly for a file
column_writer.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/column_writer.cc.s
.PHONY : column_writer.cc.s

encoding.o: encoding.cc.o

.PHONY : encoding.o

# target to build an object file
encoding.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/encoding.cc.o
.PHONY : encoding.cc.o

encoding.i: encoding.cc.i

.PHONY : encoding.i

# target to preprocess a source file
encoding.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/encoding.cc.i
.PHONY : encoding.cc.i

encoding.s: encoding.cc.s

.PHONY : encoding.s

# target to generate assembly for a file
encoding.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/encoding.cc.s
.PHONY : encoding.cc.s

encryption/encryption.o: encryption/encryption.cc.o

.PHONY : encryption/encryption.o

# target to build an object file
encryption/encryption.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/encryption/encryption.cc.o
.PHONY : encryption/encryption.cc.o

encryption/encryption.i: encryption/encryption.cc.i

.PHONY : encryption/encryption.i

# target to preprocess a source file
encryption/encryption.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/encryption/encryption.cc.i
.PHONY : encryption/encryption.cc.i

encryption/encryption.s: encryption/encryption.cc.s

.PHONY : encryption/encryption.s

# target to generate assembly for a file
encryption/encryption.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/encryption/encryption.cc.s
.PHONY : encryption/encryption.cc.s

encryption/encryption_internal_nossl.o: encryption/encryption_internal_nossl.cc.o

.PHONY : encryption/encryption_internal_nossl.o

# target to build an object file
encryption/encryption_internal_nossl.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/encryption/encryption_internal_nossl.cc.o
.PHONY : encryption/encryption_internal_nossl.cc.o

encryption/encryption_internal_nossl.i: encryption/encryption_internal_nossl.cc.i

.PHONY : encryption/encryption_internal_nossl.i

# target to preprocess a source file
encryption/encryption_internal_nossl.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/encryption/encryption_internal_nossl.cc.i
.PHONY : encryption/encryption_internal_nossl.cc.i

encryption/encryption_internal_nossl.s: encryption/encryption_internal_nossl.cc.s

.PHONY : encryption/encryption_internal_nossl.s

# target to generate assembly for a file
encryption/encryption_internal_nossl.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/encryption/encryption_internal_nossl.cc.s
.PHONY : encryption/encryption_internal_nossl.cc.s

encryption/internal_file_decryptor.o: encryption/internal_file_decryptor.cc.o

.PHONY : encryption/internal_file_decryptor.o

# target to build an object file
encryption/internal_file_decryptor.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/encryption/internal_file_decryptor.cc.o
.PHONY : encryption/internal_file_decryptor.cc.o

encryption/internal_file_decryptor.i: encryption/internal_file_decryptor.cc.i

.PHONY : encryption/internal_file_decryptor.i

# target to preprocess a source file
encryption/internal_file_decryptor.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/encryption/internal_file_decryptor.cc.i
.PHONY : encryption/internal_file_decryptor.cc.i

encryption/internal_file_decryptor.s: encryption/internal_file_decryptor.cc.s

.PHONY : encryption/internal_file_decryptor.s

# target to generate assembly for a file
encryption/internal_file_decryptor.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/encryption/internal_file_decryptor.cc.s
.PHONY : encryption/internal_file_decryptor.cc.s

encryption/internal_file_encryptor.o: encryption/internal_file_encryptor.cc.o

.PHONY : encryption/internal_file_encryptor.o

# target to build an object file
encryption/internal_file_encryptor.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/encryption/internal_file_encryptor.cc.o
.PHONY : encryption/internal_file_encryptor.cc.o

encryption/internal_file_encryptor.i: encryption/internal_file_encryptor.cc.i

.PHONY : encryption/internal_file_encryptor.i

# target to preprocess a source file
encryption/internal_file_encryptor.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/encryption/internal_file_encryptor.cc.i
.PHONY : encryption/internal_file_encryptor.cc.i

encryption/internal_file_encryptor.s: encryption/internal_file_encryptor.cc.s

.PHONY : encryption/internal_file_encryptor.s

# target to generate assembly for a file
encryption/internal_file_encryptor.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/encryption/internal_file_encryptor.cc.s
.PHONY : encryption/internal_file_encryptor.cc.s

exception.o: exception.cc.o

.PHONY : exception.o

# target to build an object file
exception.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/exception.cc.o
.PHONY : exception.cc.o

exception.i: exception.cc.i

.PHONY : exception.i

# target to preprocess a source file
exception.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/exception.cc.i
.PHONY : exception.cc.i

exception.s: exception.cc.s

.PHONY : exception.s

# target to generate assembly for a file
exception.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/exception.cc.s
.PHONY : exception.cc.s

file_reader.o: file_reader.cc.o

.PHONY : file_reader.o

# target to build an object file
file_reader.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/file_reader.cc.o
.PHONY : file_reader.cc.o

file_reader.i: file_reader.cc.i

.PHONY : file_reader.i

# target to preprocess a source file
file_reader.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/file_reader.cc.i
.PHONY : file_reader.cc.i

file_reader.s: file_reader.cc.s

.PHONY : file_reader.s

# target to generate assembly for a file
file_reader.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/file_reader.cc.s
.PHONY : file_reader.cc.s

file_writer.o: file_writer.cc.o

.PHONY : file_writer.o

# target to build an object file
file_writer.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/file_writer.cc.o
.PHONY : file_writer.cc.o

file_writer.i: file_writer.cc.i

.PHONY : file_writer.i

# target to preprocess a source file
file_writer.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/file_writer.cc.i
.PHONY : file_writer.cc.i

file_writer.s: file_writer.cc.s

.PHONY : file_writer.s

# target to generate assembly for a file
file_writer.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/file_writer.cc.s
.PHONY : file_writer.cc.s

level_comparison.o: level_comparison.cc.o

.PHONY : level_comparison.o

# target to build an object file
level_comparison.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/level_comparison.cc.o
.PHONY : level_comparison.cc.o

level_comparison.i: level_comparison.cc.i

.PHONY : level_comparison.i

# target to preprocess a source file
level_comparison.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/level_comparison.cc.i
.PHONY : level_comparison.cc.i

level_comparison.s: level_comparison.cc.s

.PHONY : level_comparison.s

# target to generate assembly for a file
level_comparison.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/level_comparison.cc.s
.PHONY : level_comparison.cc.s

level_conversion.o: level_conversion.cc.o

.PHONY : level_conversion.o

# target to build an object file
level_conversion.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/level_conversion.cc.o
.PHONY : level_conversion.cc.o

level_conversion.i: level_conversion.cc.i

.PHONY : level_conversion.i

# target to preprocess a source file
level_conversion.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/level_conversion.cc.i
.PHONY : level_conversion.cc.i

level_conversion.s: level_conversion.cc.s

.PHONY : level_conversion.s

# target to generate assembly for a file
level_conversion.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/level_conversion.cc.s
.PHONY : level_conversion.cc.s

metadata.o: metadata.cc.o

.PHONY : metadata.o

# target to build an object file
metadata.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/metadata.cc.o
.PHONY : metadata.cc.o

metadata.i: metadata.cc.i

.PHONY : metadata.i

# target to preprocess a source file
metadata.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/metadata.cc.i
.PHONY : metadata.cc.i

metadata.s: metadata.cc.s

.PHONY : metadata.s

# target to generate assembly for a file
metadata.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/metadata.cc.s
.PHONY : metadata.cc.s

murmur3.o: murmur3.cc.o

.PHONY : murmur3.o

# target to build an object file
murmur3.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/murmur3.cc.o
.PHONY : murmur3.cc.o

murmur3.i: murmur3.cc.i

.PHONY : murmur3.i

# target to preprocess a source file
murmur3.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/murmur3.cc.i
.PHONY : murmur3.cc.i

murmur3.s: murmur3.cc.s

.PHONY : murmur3.s

# target to generate assembly for a file
murmur3.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/murmur3.cc.s
.PHONY : murmur3.cc.s

platform.o: platform.cc.o

.PHONY : platform.o

# target to build an object file
platform.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/platform.cc.o
.PHONY : platform.cc.o

platform.i: platform.cc.i

.PHONY : platform.i

# target to preprocess a source file
platform.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/platform.cc.i
.PHONY : platform.cc.i

platform.s: platform.cc.s

.PHONY : platform.s

# target to generate assembly for a file
platform.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/platform.cc.s
.PHONY : platform.cc.s

printer.o: printer.cc.o

.PHONY : printer.o

# target to build an object file
printer.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/printer.cc.o
.PHONY : printer.cc.o

printer.i: printer.cc.i

.PHONY : printer.i

# target to preprocess a source file
printer.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/printer.cc.i
.PHONY : printer.cc.i

printer.s: printer.cc.s

.PHONY : printer.s

# target to generate assembly for a file
printer.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/printer.cc.s
.PHONY : printer.cc.s

properties.o: properties.cc.o

.PHONY : properties.o

# target to build an object file
properties.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/properties.cc.o
.PHONY : properties.cc.o

properties.i: properties.cc.i

.PHONY : properties.i

# target to preprocess a source file
properties.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/properties.cc.i
.PHONY : properties.cc.i

properties.s: properties.cc.s

.PHONY : properties.s

# target to generate assembly for a file
properties.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/properties.cc.s
.PHONY : properties.cc.s

schema.o: schema.cc.o

.PHONY : schema.o

# target to build an object file
schema.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/schema.cc.o
.PHONY : schema.cc.o

schema.i: schema.cc.i

.PHONY : schema.i

# target to preprocess a source file
schema.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/schema.cc.i
.PHONY : schema.cc.i

schema.s: schema.cc.s

.PHONY : schema.s

# target to generate assembly for a file
schema.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/schema.cc.s
.PHONY : schema.cc.s

statistics.o: statistics.cc.o

.PHONY : statistics.o

# target to build an object file
statistics.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/statistics.cc.o
.PHONY : statistics.cc.o

statistics.i: statistics.cc.i

.PHONY : statistics.i

# target to preprocess a source file
statistics.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/statistics.cc.i
.PHONY : statistics.cc.i

statistics.s: statistics.cc.s

.PHONY : statistics.s

# target to generate assembly for a file
statistics.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/statistics.cc.s
.PHONY : statistics.cc.s

stream_reader.o: stream_reader.cc.o

.PHONY : stream_reader.o

# target to build an object file
stream_reader.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/stream_reader.cc.o
.PHONY : stream_reader.cc.o

stream_reader.i: stream_reader.cc.i

.PHONY : stream_reader.i

# target to preprocess a source file
stream_reader.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/stream_reader.cc.i
.PHONY : stream_reader.cc.i

stream_reader.s: stream_reader.cc.s

.PHONY : stream_reader.s

# target to generate assembly for a file
stream_reader.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/stream_reader.cc.s
.PHONY : stream_reader.cc.s

stream_writer.o: stream_writer.cc.o

.PHONY : stream_writer.o

# target to build an object file
stream_writer.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/stream_writer.cc.o
.PHONY : stream_writer.cc.o

stream_writer.i: stream_writer.cc.i

.PHONY : stream_writer.i

# target to preprocess a source file
stream_writer.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/stream_writer.cc.i
.PHONY : stream_writer.cc.i

stream_writer.s: stream_writer.cc.s

.PHONY : stream_writer.s

# target to generate assembly for a file
stream_writer.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/stream_writer.cc.s
.PHONY : stream_writer.cc.s

types.o: types.cc.o

.PHONY : types.o

# target to build an object file
types.cc.o:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/types.cc.o
.PHONY : types.cc.o

types.i: types.cc.i

.PHONY : types.i

# target to preprocess a source file
types.cc.i:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/types.cc.i
.PHONY : types.cc.i

types.s: types.cc.s

.PHONY : types.s

# target to generate assembly for a file
types.cc.s:
	cd /home/pi/Code/arrow/cpp && $(MAKE) -f src/parquet/CMakeFiles/parquet_objlib.dir/build.make src/parquet/CMakeFiles/parquet_objlib.dir/types.cc.s
.PHONY : types.cc.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... install"
	@echo "... rebuild_cache"
	@echo "... parquet_static"
	@echo "... parquet"
	@echo "... parquet-all"
	@echo "... list_install_components"
	@echo "... parquet_shared"
	@echo "... install/strip"
	@echo "... parquet-benchmarks"
	@echo "... install/local"
	@echo "... test"
	@echo "... parquet-tests"
	@echo "... edit_cache"
	@echo "... parquet_objlib"
	@echo "... __/generated/parquet_constants.o"
	@echo "... __/generated/parquet_constants.i"
	@echo "... __/generated/parquet_constants.s"
	@echo "... __/generated/parquet_types.o"
	@echo "... __/generated/parquet_types.i"
	@echo "... __/generated/parquet_types.s"
	@echo "... arrow/path_internal.o"
	@echo "... arrow/path_internal.i"
	@echo "... arrow/path_internal.s"
	@echo "... arrow/reader.o"
	@echo "... arrow/reader.i"
	@echo "... arrow/reader.s"
	@echo "... arrow/reader_internal.o"
	@echo "... arrow/reader_internal.i"
	@echo "... arrow/reader_internal.s"
	@echo "... arrow/schema.o"
	@echo "... arrow/schema.i"
	@echo "... arrow/schema.s"
	@echo "... arrow/schema_internal.o"
	@echo "... arrow/schema_internal.i"
	@echo "... arrow/schema_internal.s"
	@echo "... arrow/writer.o"
	@echo "... arrow/writer.i"
	@echo "... arrow/writer.s"
	@echo "... bloom_filter.o"
	@echo "... bloom_filter.i"
	@echo "... bloom_filter.s"
	@echo "... column_reader.o"
	@echo "... column_reader.i"
	@echo "... column_reader.s"
	@echo "... column_scanner.o"
	@echo "... column_scanner.i"
	@echo "... column_scanner.s"
	@echo "... column_writer.o"
	@echo "... column_writer.i"
	@echo "... column_writer.s"
	@echo "... encoding.o"
	@echo "... encoding.i"
	@echo "... encoding.s"
	@echo "... encryption/encryption.o"
	@echo "... encryption/encryption.i"
	@echo "... encryption/encryption.s"
	@echo "... encryption/encryption_internal_nossl.o"
	@echo "... encryption/encryption_internal_nossl.i"
	@echo "... encryption/encryption_internal_nossl.s"
	@echo "... encryption/internal_file_decryptor.o"
	@echo "... encryption/internal_file_decryptor.i"
	@echo "... encryption/internal_file_decryptor.s"
	@echo "... encryption/internal_file_encryptor.o"
	@echo "... encryption/internal_file_encryptor.i"
	@echo "... encryption/internal_file_encryptor.s"
	@echo "... exception.o"
	@echo "... exception.i"
	@echo "... exception.s"
	@echo "... file_reader.o"
	@echo "... file_reader.i"
	@echo "... file_reader.s"
	@echo "... file_writer.o"
	@echo "... file_writer.i"
	@echo "... file_writer.s"
	@echo "... level_comparison.o"
	@echo "... level_comparison.i"
	@echo "... level_comparison.s"
	@echo "... level_conversion.o"
	@echo "... level_conversion.i"
	@echo "... level_conversion.s"
	@echo "... metadata.o"
	@echo "... metadata.i"
	@echo "... metadata.s"
	@echo "... murmur3.o"
	@echo "... murmur3.i"
	@echo "... murmur3.s"
	@echo "... platform.o"
	@echo "... platform.i"
	@echo "... platform.s"
	@echo "... printer.o"
	@echo "... printer.i"
	@echo "... printer.s"
	@echo "... properties.o"
	@echo "... properties.i"
	@echo "... properties.s"
	@echo "... schema.o"
	@echo "... schema.i"
	@echo "... schema.s"
	@echo "... statistics.o"
	@echo "... statistics.i"
	@echo "... statistics.s"
	@echo "... stream_reader.o"
	@echo "... stream_reader.i"
	@echo "... stream_reader.s"
	@echo "... stream_writer.o"
	@echo "... stream_writer.i"
	@echo "... stream_writer.s"
	@echo "... types.o"
	@echo "... types.i"
	@echo "... types.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/pi/Code/arrow/cpp && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

